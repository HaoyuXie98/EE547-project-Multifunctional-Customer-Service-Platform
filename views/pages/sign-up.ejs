<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Sign up Page</title>
  <link rel="stylesheet" href="style_login.css">
  <style>
    .go-to-income {
      background-color: #4CAF50;
      border: none;
      color: white;
      padding: 10px 20px;
      text-align: center;
      text-decoration: none;
      display: inline-block;
      font-size: 16px;
      margin: 10px 2px;
      cursor: pointer;
    }
  </style>
</head>
<body>
  <div class="screen-1">
    <svg class="logo" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="300" height="300" viewbox="0 0 640 480" xml:space="preserve">
      <g transform="matrix(3.31 0 0 3.31 320.4 240.4)">
        <circle style="stroke: rgb(0,0,0); stroke-width: 0; stroke-dasharray: none; stroke-linecap: butt; stroke-dashoffset: 0; stroke-linejoin: miter; stroke-miterlimit: 4; fill: rgb(61,71,133); fill-rule: nonzero; opacity: 1;" cx="0" cy="0" r="40"></circle>
      </g>
      <g transform="matrix(0.98 0 0 0.98 268.7 213.7)">
        <circle style="stroke: rgb(0,0,0); stroke-width: 0; stroke-dasharray: none; stroke-linecap: butt; stroke-dashoffset: 0; stroke-linejoin: miter; stroke-miterlimit: 4; fill: rgb(255,255,255); fill-rule: nonzero; opacity: 1;" cx="0" cy="0" r="40"></circle>
      </g>
      <g transform="matrix(1.01 0 0 1.01 362.9 210.9)">
        <circle style="stroke: rgb(0,0,0); stroke-width: 0; stroke-dasharray: none; stroke-linecap: butt; stroke-dashoffset: 0; stroke-linejoin: miter; stroke-miterlimit: 4; fill: rgb(255,255,255); fill-rule: nonzero; opacity: 1;" cx="0" cy="0" r="40"></circle>
      </g>
      <g transform="matrix(0.92 0 0 0.92 318.5 286.5)">
        <circle style="stroke: rgb(0,0,0); stroke-width: 0; stroke-dasharray: none; stroke-linecap: butt; stroke-dashoffset: 0; stroke-linejoin: miter; stroke-miterlimit: 4; fill: rgb(255,255,255); fill-rule: nonzero; opacity: 1;" cx="0" cy="0" r="40"></circle>
      </g>
      <g transform="matrix(0.16 -0.12 0.49 0.66 290.57 243.57)">
        <polygon style="stroke: rgb(0,0,0); stroke-width: 0; stroke-dasharray: none; stroke-linecap: butt; stroke-dashoffset: 0; stroke-linejoin: miter; stroke-miterlimit: 4; fill: rgb(255,255,255); fill-rule: nonzero; opacity: 1;" points="-50,-50 -50,50 50,50 50,-50 "></polygon>
      </g>
      <g transform="matrix(0.16 0.1 -0.44 0.69 342.03 248.34)">
        <polygon style="stroke: rgb(0,0,0); stroke-width: 0; stroke-dasharray: none; stroke-linecap: butt; stroke-dashoffset: 0; stroke-linejoin: miter; stroke-miterlimit: 4; fill: rgb(255,255,255); fill-rule: nonzero; opacity: 1;" vector-effect="non-scaling-stroke" points="-50,-50 -50,50 50,50 50,-50 "></polygon>
      </g>
    </svg>
    <div class="name">
      <label for="name">Username</label>
      <div class="sec-2">
        <ion-icon name="mail-outline"></ion-icon>
        <input type="name" name="name" id="name"/>
      </div>
    </div>
    <div class="password">
      <label for="password">Password</label>
      <div class="sec-2">
        <ion-icon name="lock-closed-outline"></ion-icon>
        <input class="pas" type="password" name="password" id="password"/>
        <ion-icon class="show-hide" name="eye-outline"></ion-icon>
      </div>
    </div>
    <div class="password">
      <label for="role">Role</label>
      <select id="role" name="role">
        <option value="agent">Agent</option>
        <option value="client">Client</option>
      </select>
    </div>
    <button class="login" onclick="Signup()">Sign up</button>
    <div class="error-message" id="error-message" style="display: none; color: red; text-align: center; margin-top: 10px;"></div>
    <div class="income-button">
      <button class="go-to-income" onclick="window.location.href='/income'">Leave a message to our agent directly!</button>
    </div> 
    <div class="footer">
      <a href="/login">Login</a>
  </div>

  <script>
  function Signup() {
    const name = document.getElementById("name").value;
    const password = document.getElementById("password").value;
    const role = document.getElementById("role").value;
    const errorMessage = document.getElementById("error-message");

    // Create an object with the login information
    const signupInfo = {
      username: name,
      password: password,
      role: role
    };
    console.log("signupInfo in ejs", signupInfo);
    // Send the login request to the server
    fetch("/api/signup", {
      method: "POST",
      headers: {
        "Content-Type": "application/json"
      },
      body: JSON.stringify(signupInfo)
    })
    .then(async response => {
      if (response.ok) {
        // Sign up successful, redirect to a new page or perform other actions
        window.location.href = "/login"; // Replace with your desired page URL
      } else {
        // Sign up failed, display an error message
        console.log("Sign up failed");
        const errorData = await response.json();
        errorMessage.innerText = errorData.message || "Sign up failed";
        errorMessage.style.display = "block";
      }
    })
    .catch(error => {
      console.error("Error:", error);
    });
  }

  </script>
</body>
</html>
